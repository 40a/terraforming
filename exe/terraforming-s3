#!/usr/bin/env ruby

#
# terraforming-s3
#
# Usage:
#   aws s3api list-buckets | ./terraforming-s3 [--tfstate]
#

require "json"

def tf(data)
  data['Buckets'].inject([]) do |result, bucket|
    result << <<-EOS
resource "aws_s3_bucket" "#{bucket['Name']}" {
    bucket = "#{bucket['Name']}"
    acl    = "private"
}
    EOS
    result
  end.join("\n")
end

def tfstate(data)
  tfstate_s3_buckets = data['Buckets'].inject({}) do |result, bucket|
    result["aws_s3_bucket.#{bucket['Name']}"] = {
      "type" => "aws_s3_bucket",
      "primary" => {
        "id" => bucket['Name'],
        "attributes" => {
          "acl" => "private",
          "bucket" => bucket['Name'],
          "id" => bucket['Name']
        }
      }
    }
    result
  end

  JSON.pretty_generate(tfstate_s3_buckets)
end

generate_tfstate = ARGV.length > 0 && ARGV.shift == "--tfstate"

json = ARGF.read
data = JSON.parse(json)

puts generate_tfstate ? tfstate(data) : tf(data)
